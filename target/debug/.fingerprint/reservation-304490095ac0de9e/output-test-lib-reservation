{"$message_type":"diagnostic","message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":1898,"byte_end":1906,"line_start":70,"line_end":70,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":1894,"byte_end":1907,"line_start":70,"line_end":70,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:70:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m70\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"expected `PgConnectOptions`, found a different `PgConnectOptions`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_core`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs","byte_start":3117,"byte_end":3144,"line_start":79,"line_end":79,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_postgres`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs","byte_start":3522,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs","byte_start":14454,"byte_end":14466,"line_start":302,"line_end":302,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    pub async fn connect_with(","highlight_start":18,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:75:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PgConnectOptions`, found a different `PgConnectOptions`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs:79:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_postgres`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs:302:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn connect_with(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `sqlx_database_tester::test` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"expected `PgConnectOptions`, found a different `PgConnectOptions`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_core`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs","byte_start":3117,"byte_end":3144,"line_start":79,"line_end":79,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_postgres`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs","byte_start":3522,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs","byte_start":14454,"byte_end":14466,"line_start":302,"line_end":302,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    pub async fn connect_with(","highlight_start":18,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:92:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PgConnectOptions`, found a different `PgConnectOptions`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs:79:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_postgres`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs:302:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn connect_with(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `sqlx_database_tester::test` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated associated function `abi::ReservationStatus::from_i32`: Use the TryFrom<i32> implementation instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":385,"byte_end":393,"line_start":11,"line_end":11,"column_start":46,"column_end":54,"is_primary":true,"text":[{"text":"        let status = abi::ReservationStatus::from_i32(rsvp.status)","highlight_start":46,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: use of deprecated associated function `abi::ReservationStatus::from_i32`: Use the TryFrom<i32> implementation instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:11:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let status = abi::ReservationStatus::from_i32(rsvp.status)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"expected `PgConnectOptions`, found a different `PgConnectOptions`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":1998,"byte_end":2091,"line_start":75,"line_end":75,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_core`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs","byte_start":3117,"byte_end":3144,"line_start":79,"line_end":79,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_postgres`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs","byte_start":3522,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs","byte_start":14454,"byte_end":14466,"line_start":302,"line_end":302,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    pub async fn connect_with(","highlight_start":18,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:75:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PgConnectOptions`, found a different `PgConnectOptions`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs:79:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_postgres`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs:302:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn connect_with(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `sqlx_database_tester::test` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"expected `PgConnectOptions`, found a different `PgConnectOptions`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":true,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"reservation\\src\\manager.rs","byte_start":2738,"byte_end":2831,"line_start":92,"line_end":92,"column_start":5,"column_end":98,"is_primary":false,"text":[{"text":"    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]","highlight_start":5,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[sqlx_database_tester::test]","def_site_span":{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-database-tester-macros-0.4.2\\src\\lib.rs","byte_start":2362,"byte_end":2431,"line_start":76,"line_end":76,"column_start":1,"column_end":70,"is_primary":false,"text":[{"text":"pub fn test(test_attr: TokenStream, item: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_core`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs","byte_start":3117,"byte_end":3144,"line_start":79,"line_end":79,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"`PgConnectOptions` is defined in crate `sqlx_postgres`","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs","byte_start":3522,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"pub struct PgConnectOptions {","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"E:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs","byte_start":14454,"byte_end":14466,"line_start":302,"line_end":302,"column_start":18,"column_end":30,"is_primary":true,"text":[{"text":"    pub async fn connect_with(","highlight_start":18,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mreservation\\src\\manager.rs:92:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m92\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[sqlx_database_tester::test(pool(variable = \"migrated_pool\", migrations = \"../migrations\"))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `PgConnectOptions`, found a different `PgConnectOptions`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `PgConnectOptions` and `PgConnectOptions` have similar names, but are actually distinct types\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_core`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.6.3\\src\\postgres\\options\\mod.rs:79:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `PgConnectOptions` is defined in crate `sqlx_postgres`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-postgres-0.7.4\\src\\options\\mod.rs:89:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PgConnectOptions {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mE:\\Rust\\registry\\src\\index.crates.io-6f17d22bba15001f\\sqlx-core-0.7.4\\src\\pool\\mod.rs:302:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m302\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub async fn connect_with(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the attribute macro `sqlx_database_tester::test` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 4 previous errors; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 4 previous errors; 2 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
